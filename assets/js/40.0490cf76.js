(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{409:function(t,s,n){"use strict";n.r(s);var a=n(46),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"using-argdown-in-your-application"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-argdown-in-your-application"}},[t._v("#")]),t._v(" Using Argdown in your application")]),t._v(" "),n("p",[t._v("So far, we have only extended Argdown through config files. If you want to use Argdown in your own application, it is also easy to do so. If you are writing a node application, you can use the "),n("code",[t._v("@argdown/node")]),t._v(" package which provides you with the pre-built "),n("code",[t._v("AsyncArgdownApplication")]),t._v(" instance that is used in the VS Code extension and in the commandline tool.")]),t._v(" "),n("p",[t._v("We will add our toy plugin from the "),n("RouterLink",{attrs:{to:"/guide/writing-custom-plugins.html"}},[t._v("previous sections")]),t._v(" to the argdown app and run it. We are adding the same process we have defined previously in a config file to the argdown application itself.")],1),t._v(" "),n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("argdown"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@argdown/node"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("SaysWhoPlugin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" IArgdownRequest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@argdown/core"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nargdown"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addPlugin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SaysWhoPlugin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add-proponents"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nargdown"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("defaultProcesses"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"say-who-map"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"parse-input"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// parses them (response.ast)")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"build-model"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// builds the data model (response.arguments, response.statements...)")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"build-map"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// creates the map (response.map)")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add-proponents"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// our new processor with the SaysWhoPlugin")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"export-dot"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// exports the map into dot format")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"export-svg"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// exports the dot file into svg format")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Here is our example debate from before again:")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" input "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n# Section 1\n\n<a>: Quack! {proponent: Donald Duck}\n    - <b>\n    + <c>\n\n## Section 2\n\n<b>: D'oh! {proponent: Homer Simpson}\n\n<c>: Pretty, pretty, pretty, pretty good. {proponent: Larry David}\n")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We have to create a request with the input and our process")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" request"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("IArgdownRequest "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    input"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    process"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"says-who-map"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Now we can run our request and hopefully we will get the svg data back:")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" response "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" argdown"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("svg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("For more information about how the "),n("code",[t._v("ArgdownApplication")]),t._v(" class manages plugins, processors and processes, please consult the "),n("RouterLink",{attrs:{to:"/api/"}},[t._v("API documents")]),t._v(" of "),n("code",[t._v("@argdown/core")]),t._v(" and "),n("code",[t._v("@argdown/node")]),t._v(".")],1),t._v(" "),n("p",[t._v("If you need further help integrating Argdown into your own application or writing custom plugins, you can also open an issue in the "),n("a",{attrs:{href:"https://github.com/christianvoigt/argdown/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("Argdown Github repository"),n("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);s.default=e.exports}}]);